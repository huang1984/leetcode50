# Definition for singly-linked list.

# class ListNode:

#     def __init__(self, x):

#         self.val = x

#         self.next = None

class Solution:

    def sortList(self, head):

        if (not head or not head.next):  
            return head

        pre = head

        slow = head

        fast = head

        while (fast and fast.next):   

            pre = slow

            slow = slow.next

            fast = fast.next.next

        pre.next = None

        return self.merge(self.sortList(head), self.sortList(slow))  



    def merge(self, l1, l2):

        res = ListNode(0)

        cur = res

        while (l1 and l2):

            if l1.val > l2.val:

                cur.next = l2   

                l2 = l2.next

            else:

                cur.next = l1

                l1 = l1.next

            cur = cur.next

        if l1:

            cur.next = l1

        if l2:

            cur.next = l2

        return res.next
